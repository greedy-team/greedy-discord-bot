name: Deploy discord bot

env:
  VERSION: 0.0.1

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
          
      - name: Apply application secrets
        run: |
          pwd
          cd ./src/main/resources
          touch ./${{ secrets.APPLICATION_PROFILE_FILE }}
          echo "${{ secrets.APPLICATION_PROFILE }}" > ./${{ secrets.APPLICATION_PROFILE_FILE }}
        working-directory: ${{ env.working-directory }}

      - name: Apply google credentials
        run: |
          pwd
          cd ./src/main/resources
          mkdir -p ${{ secrets.GOOGLE_CREDENTIAL_PATH }} 
          cd ${{ secrets.GOOGLE_CREDENTIAL_PATH }}
          touch ./${{ secrets.GOOGLE_CREDENTIAL_FILE }}
          echo "${{ secrets.GOOGLE_CREDENTIAL }}" > ./${{ secrets.GOOGLE_CREDENTIAL_FILE }}
        working-directory: ${{ env.working-directory }}


      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew bootJar -Dspring.profiles.active=${{ secrets.ACTIVE_PROFILE }}

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags:
            ${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            cd
            cd ${{ secrets.DISCORD_APP_PATH }} && cd ./bin
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            sudo sh deploy.sh
